
// SSD1306 OLED 핀아웃: SDA(P0.17), SCL(P0.20)
&pro_micro_i2c {
    status = "okay";

    oled_128x32: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

/ {
    chosen {
        zmk,kscan = &kscan0;
        zephyr,display = &oled_128x32;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";
        wakeup-source;
        
        input-gpios =
            <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 풋스위치 1(좌) (P0.6)
            <&gpio0 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 풋스위치 2(우) (P0.8)
            <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>, // 마우스/키보드 전환 스위치 (P0.22)
            <&gpio0 24 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; // 레이어 순환 스위치 (P0.24)
    };
};

/ {
    // 부저 소비자 노드: pwm-leds를 재활용
    buzzer: pwmleds {
        compatible = "pwm-leds";
        buzzer_pwm: buzzer_pwm {
            // &pwm0의 채널 0을 사용. 주기는 코드에서 바꿀 거라 여기선 10ms로 예시
            pwms = <&pwm0 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
            label = "buzzer_pwm";
        };
    };
};

// PWM0에 pinctrl 연결
&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

// pinctrl: PWM0 CH0 -> P0.29 매핑
&pinctrl {
    pwm0_default: pwm0_default {
        group1 {
            // (PWM_OUT0, 포트, 핀). P0.29 → (0, 29)
            psels = <NRF_PSEL(PWM_OUT0, 0, 29)>;
        };
    };
    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 29)>;
            low-power-enable;
        };
    };
}
